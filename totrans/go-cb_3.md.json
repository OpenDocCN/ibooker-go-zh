["```go\nid,first_name,last_name,email\n1,Sausheong,Chang,sausheong@email.com\n2,John,Doe,john@email.com\n```", "```go\nfile, err := os.Open(\"users.csv\")\nif err != nil {\n log.Println(\"Cannot open CSV file:\", err)\n}\ndefer file.Close()\nreader := csv.NewReader(file)\nrows, err := reader.ReadAll()\nif err != nil {\n log.Println(\"Cannot read CSV file:\", err)\n}\n```", "```go\ntype User struct {\n   Id         int\n   firstName  string\n   lastName   string\n   email      string\n}\n```", "```go\nvar users []User\nfor _, row := range rows {\n id, _ := strconv.ParseInt(row[0], 0, 0)\n user := User{Id: int(id),\n   firstName: row[1],\n   lastName:  row[2],\n   email:     row[3],\n }\n users = append(users, user)\n}\n```", "```go\n{0  first_name  last_name  email}\n{1  Sausheong  Chang  sausheong@email.com}\n{2  John  Doe  john@email.com}\n```", "```go\nfile, err := os.Open(\"users.csv\")\nif err != nil {\n log.Println(\"Cannot open CSV file:\", err)\n}\ndefer file.Close()\nreader := csv.NewReader(file)\nreader.Read() // use Read to remove the first line\nrows, err := reader.ReadAll()\nif err != nil {\n log.Println(\"Cannot read CSV file:\", err)\n}\n```", "```go\n{1  Sausheong  Chang  sausheong@email.com}\n{2  John  Doe  john@email.com}\n```", "```go\nid;first_name;last_name;email\n1;Sausheong;Chang;sausheong@email.com\n2;John;Doe;john@email.com\n```", "```go\nfile, err := os.Open(\"users2.csv\")\nif err != nil {\n  log.Println(\"Cannot open CSV file:\", err)\n}\ndefer file.Close()\nreader := csv.NewReader(file)\nreader.Comma = ';' // change Comma to the delimiter in the file\nrows, err := reader.ReadAll()\nif err != nil {\n  log.Println(\"Cannot read CSV file:\", err)\n}\n```", "```go\nid,first_name,last_name,email\n1,Sausheong,Chang,sausheong@email.com\n# 2,John,Doe,john@email.com\n```", "```go\nfile, err := os.Open(\"users.csv\")\nif err != nil {\n  log.Println(\"Cannot open CSV file:\", err)\n}\ndefer file.Close()\nreader := csv.NewReader(file)\nreader.Comment = '#' // lines that start with this will be ignored\nrows, err := reader.ReadAll()\nif err != nil {\n  log.Println(\"Cannot read CSV file:\", err)\n}\n```", "```go\n{0 first_name last_name email}\n{1 Sausheong Chang sausheong@email.com}\n```", "```go\nfile, err := os.Create(\"new_users.csv\")\nif err != nil {\n  log.Println(\"Cannot create CSV file:\", err)\n}\ndefer file.Close()\n```", "```go\ndata := [][]string{\n {\"id\", \"first_name\", \"last_name\", \"email\"},\n {\"1\", \"Sausheong\", \"Chang\", \"sausheong@email.com\"},\n {\"2\", \"John\", \"Doe\", \"john@email.com\"},\n}\nwriter := csv.NewWriter(file)\nerr = writer.WriteAll(data)\nif err != nil {\n log.Println(\"Cannot write to CSV file:\", err)\n}\n```", "```go\nwriter := csv.NewWriter(file)\nfor _, row := range data {\n err = writer.Write(row)\n if err != nil {\n  log.Println(\"Cannot write to CSV file:\", err)\n }\n}\nwriter.Flush()\n```"]