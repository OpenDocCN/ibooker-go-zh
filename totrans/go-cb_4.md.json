["```go\n{\n\t\"name\": \"Luke Skywalker\",\n\t\"height\": \"172\",\n\t\"mass\": \"77\",\n\t\"hair_color\": \"blond\",\n\t\"skin_color\": \"fair\",\n\t\"eye_color\": \"blue\",\n\t\"birth_year\": \"19BBY\",\n\t\"gender\": \"male\",\n\t\"homeworld\": \"https://swapi.dev/api/planets/1/\",\n\t\"films\": [\n\t\t\"https://swapi.dev/api/films/1/\",\n\t\t\"https://swapi.dev/api/films/2/\",\n\t\t\"https://swapi.dev/api/films/3/\",\n\t\t\"https://swapi.dev/api/films/6/\"\n\t],\n\t\"species\": [],\n\t\"vehicles\": [\n\t\t\"https://swapi.dev/api/vehicles/14/\",\n\t\t\"https://swapi.dev/api/vehicles/30/\"\n\t],\n\t\"starships\": [\n\t\t\"https://swapi.dev/api/starships/12/\",\n\t\t\"https://swapi.dev/api/starships/22/\"\n\t],\n\t\"created\": \"2014-12-09T13:50:51.644000Z\",\n\t\"edited\": \"2014-12-20T21:17:56.891000Z\",\n\t\"url\": \"https://swapi.dev/api/people/1/\"\n}\n```", "```go\ntype Person struct {\n\tName      string        `json:\"name\"`\n\tHeight    string        `json:\"height\"`\n\tMass      string        `json:\"mass\"`\n\tHairColor string        `json:\"hair_color\"`\n\tSkinColor string        `json:\"skin_color\"`\n\tEyeColor  string        `json:\"eye_color\"`\n\tBirthYear string        `json:\"birth_year\"`\n\tGender    string        `json:\"gender\"`\n\tHomeworld string        `json:\"homeworld\"`\n\tFilms     []string      `json:\"films\"`\n\tSpecies   []string      `json:\"species\"`\n\tVehicles  []string      `json:\"vehicles\"`\n\tStarships []string      `json:\"starships\"`\n\tCreated   time.Time     `json:\"created\"`\n\tEdited    time.Time     `json:\"edited\"`\n\tURL       string        `json:\"url\"`\n}\n```", "```go\nfunc unmarshal() (person Person) {\n\tfile, err := os.Open(\"skywalker.json\")\n\tif err != nil {\n\t\tlog.Println(\"Error opening json file:\", err)\n\t}\n\tdefer file.Close()\n\n\tdata, err := io.ReadAll(file)\n\tif err != nil {\n\t\tlog.Println(\"Error reading json data:\", err)\n\t}\n\n\terr = json.Unmarshal(data, &person)\n\tif err != nil {\n\t\tlog.Println(\"Error unmarshalling json data:\", err)\n\t}\n\treturn\n}\n```", "```go\nfunc unmarshalAPI() (person Person) {\n\tr, err := http.Get(\"https://swapi.dev/api/people/1\")\n\tif err != nil {\n\t\tlog.Println(\"Cannot get from URL\", err)\n\t}\n\tdefer r.Body.Close()\n\n\tdata, err := io.ReadAll(r.Body)\n\tif err != nil {\n\t\tlog.Println(\"Error reading json data:\", err)\n\t}\n\n\terr = json.Unmarshal(data, &person)\n\tif err != nil {\n\t\tlog.Println(\"Error unmarshalling json data:\", err)\n\t}\n\treturn\n}\n```", "```go\njson.Person{\n    Name:      \"Luke Skywalker\",\n    Height:    \"172\",\n    Mass:      \"77\",\n    HairColor: \"blond\",\n    SkinColor: \"fair\",\n    EyeColor:  \"blue\",\n    BirthYear: \"19BBY\",\n    Gender:    \"male\",\n    Homeworld: \"https://swapi.dev/api/planets/1/\",\n    Films:     {\"https://swapi.dev/api/films/1/\", \"https://swapi.dev/api/films/2/\",\n    \"https://swapi.dev/api/films/3/\", \"https://swapi.dev/api/films/6/\"},\n    Species:   {},\n    Vehicles:  {\"https://swapi.dev/api/vehicles/14/\",\n      \"https://swapi.dev/api/vehicles/30/\"},\n    Starships: {\"https://swapi.dev/api/starships/12/\",\n      \"https://swapi.dev/api/starships/22/\"},\n    Created:   time.Date(2014, time.December, 9, 13, 50, 51, 644000000, time.UTC),\n    Edited:    time.Date(2014, time.December, 20, 21, 17, 56, 891000000, time.UTC),\n    URL:       \"https://swapi.dev/api/people/1/\",\n}\n```", "```go\n{\n    \"Luke Skywalker\": [\n        \"https://swapi.dev/api/films/1/\",\n        \"https://swapi.dev/api/films/2/\",\n        \"https://swapi.dev/api/films/3/\",\n        \"https://swapi.dev/api/films/6/\"\n       ],\n    \"C-3P0\": [\n        \"https://swapi.dev/api/films/1/\",\n        \"https://swapi.dev/api/films/2/\",\n        \"https://swapi.dev/api/films/3/\",\n        \"https://swapi.dev/api/films/4/\",\n        \"https://swapi.dev/api/films/5/\",\n        \"https://swapi.dev/api/films/6/\"\n       ],\n    \"R2D2\": [\n        \"https://swapi.dev/api/films/1/\",\n        \"https://swapi.dev/api/films/2/\",\n        \"https://swapi.dev/api/films/3/\",\n        \"https://swapi.dev/api/films/4/\",\n        \"https://swapi.dev/api/films/5/\",\n        \"https://swapi.dev/api/films/6/\"\n       ],\n    \"Darth Vader\": [\n        \"https://swapi.dev/api/films/1/\",\n        \"https://swapi.dev/api/films/2/\",\n        \"https://swapi.dev/api/films/3/\",\n        \"https://swapi.dev/api/films/6/\"\n       ]\n}\n```", "```go\nfunc unstructured() (output map[string]interface{}) {\n\tfile, err := os.Open(\"unstructured.json\")\n\tif err != nil {\n\t\tlog.Println(\"Error opening json file:\", err)\n\t}\n\tdefer file.Close()\n\n\tdata, err := io.ReadAll(file)\n\tif err != nil {\n\t\tlog.Println(\"Error reading json data:\", err)\n\t}\n\n\terr = json.Unmarshal(data, &output)\n\tif err != nil {\n\t\tlog.Println(\"Error unmarshalling json data:\", err)\n\t}\n\treturn\n}\n```", "```go\nmap[string]interface {}{\n    \"C-3P0\": []interface {}{\n        \"https://swapi.dev/api/films/1/\",\n        \"https://swapi.dev/api/films/2/\",\n        \"https://swapi.dev/api/films/3/\",\n        \"https://swapi.dev/api/films/4/\",\n        \"https://swapi.dev/api/films/5/\",\n        \"https://swapi.dev/api/films/6/\",\n    },\n    \"Darth Vader\": []interface {}{\n        \"https://swapi.dev/api/films/1/\",\n        \"https://swapi.dev/api/films/2/\",\n        \"https://swapi.dev/api/films/3/\",\n        \"https://swapi.dev/api/films/6/\",\n    },\n    \"Luke Skywalker\": []interface {}{\n        \"https://swapi.dev/api/films/1/\",\n        \"https://swapi.dev/api/films/2/\",\n        \"https://swapi.dev/api/films/3/\",\n        \"https://swapi.dev/api/films/6/\",\n    },\n    \"R2D2\": []interface {}{\n        \"https://swapi.dev/api/films/1/\",\n        \"https://swapi.dev/api/films/2/\",\n        \"https://swapi.dev/api/films/3/\",\n        \"https://swapi.dev/api/films/4/\",\n        \"https://swapi.dev/api/films/5/\",\n        \"https://swapi.dev/api/films/6/\",\n    },\n}\n```", "```go\nmap[string]interface {}{\n    \"birth_year\": \"19BBY\",\n    \"created\":    \"2014-12-09T13:50:51.644000Z\",\n    \"edited\":     \"2014-12-20T21:17:56.891000Z\",\n    \"eye_color\":  \"blue\",\n    \"films\":      []interface {}{\n        \"https://swapi.dev/api/films/1/\",\n        \"https://swapi.dev/api/films/2/\",\n        \"https://swapi.dev/api/films/3/\",\n        \"https://swapi.dev/api/films/6/\",\n    },\n    \"gender\":     \"male\",\n    \"hair_color\": \"blond\",\n    \"height\":     \"172\",\n    \"homeworld\":  \"https://swapi.dev/api/planets/1/\",\n    \"mass\":       \"77\",\n    \"name\":       \"Luke Skywalker\",\n    \"skin_color\": \"fair\",\n    \"species\":    []interface {}{\n    },\n    \"starships\": []interface {}{\n        \"https://swapi.dev/api/starships/12/\",\n        \"https://swapi.dev/api/starships/22/\",\n    },\n    \"url\":      \"https://swapi.dev/api/people/1/\",\n    \"vehicles\": []interface {}{\n        \"https://swapi.dev/api/vehicles/14/\",\n        \"https://swapi.dev/api/vehicles/30/\",\n    },\n}\n```", "```go\nunstruct := unstructured()\nvader := unstruct[\"Darth Vader\"]\nfirst := vader[0]\n```", "```go\ninvalid operation: vader[0] (type interface {} does not support indexing)\n```", "```go\nunstruct := unstructured()\nvader := unstruct[\"Darth Vader\"].([]interface{})\nfirst := vader[0]\n```", "```go\n[{\n\"name\": \"Luke Skywalker\",\n\"height\": \"172\",\n\"mass\": \"77\",\n\"hair_color\": \"blond\",\n\"skin_color\": \"fair\",\n\"eye_color\": \"blue\",\n\"birth_year\": \"19BBY\",\n\"gender\": \"male\"\n},\n{\n\"name\": \"C-3PO\",\n\"height\": \"167\",\n\"mass\": \"75\",\n\"hair_color\": \"n/a\",\n\"skin_color\": \"gold\",\n\"eye_color\": \"yellow\",\n\"birth_year\": \"112BBY\",\n\"gender\": \"n/a\"\n},\n{\n\"name\": \"R2-D2\",\n\"height\": \"96\",\n\"mass\": \"32\",\n\"hair_color\": \"n/a\",\n\"skin_color\": \"white, blue\",\n\"eye_color\": \"red\",\n\"birth_year\": \"33BBY\",\n\"gender\": \"n/a\"\n}]\n```", "```go\nfunc unmarshalStructArray() (people []Person) {\n\tfile, err := os.Open(\"people.json\")\n\tif err != nil {\n\t\tlog.Println(\"Error opening json file:\", err)\n\t}\n\tdefer file.Close()\n\n\tdata, err := io.ReadAll(file)\n\tif err != nil {\n\t\tlog.Println(\"Error reading json data:\", err)\n\t}\n\n\terr = json.Unmarshal(data, &people)\n\tif err != nil {\n\t\tlog.Println(\"Error unmarshalling json data:\", err)\n\t}\n\treturn\n}\n```", "```go\n[]json.Person{\n    {\n        Name:      \"Luke Skywalker\",\n        Height:    \"172\",\n        Mass:      \"77\",\n        HairColor: \"blond\",\n        SkinColor: \"fair\",\n        EyeColor:  \"blue\",\n        BirthYear: \"19BBY\",\n        Gender:    \"male\",\n        Homeworld: \"\",\n        Films:     nil,\n        Species:   nil,\n        Vehicles:  nil,\n        Starships: nil,\n        Created:   time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC),\n        Edited:    time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC),\n        URL:       \"\",\n    },\n    {\n        Name:      \"C-3PO\",\n        Height:    \"167\",\n        Mass:      \"75\",\n        HairColor: \"n/a\",\n        SkinColor: \"gold\",\n        EyeColor:  \"yellow\",\n        BirthYear: \"112BBY\",\n        Gender:    \"n/a\",\n        Homeworld: \"\",\n        Films:     nil,\n        Species:   nil,\n        Vehicles:  nil,\n        Starships: nil,\n        Created:   time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC),\n        Edited:    time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC),\n        URL:       \"\",\n    },\n    {\n        Name:      \"R2-D2\",\n        Height:    \"96\",\n        Mass:      \"32\",\n        HairColor: \"n/a\",\n        SkinColor: \"white, blue\",\n        EyeColor:  \"red\",\n        BirthYear: \"33BBY\",\n        Gender:    \"n/a\",\n        Homeworld: \"\",\n        Films:     nil,\n        Species:   nil,\n        Vehicles:  nil,\n        Starships: nil,\n        Created:   time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC),\n        Edited:    time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC),\n        URL:       \"\",\n    },\n}\n```", "```go\n{\n\"name\": \"Luke Skywalker\",\n\"height\": \"172\",\n\"mass\": \"77\",\n\"hair_color\": \"blond\",\n\"skin_color\": \"fair\",\n\"eye_color\": \"blue\",\n\"birth_year\": \"19BBY\",\n\"gender\": \"male\"\n}\n{\n\"name\": \"C-3PO\",\n\"height\": \"167\",\n\"mass\": \"75\",\n\"hair_color\": \"n/a\",\n\"skin_color\": \"gold\",\n\"eye_color\": \"yellow\",\n\"birth_year\": \"112BBY\",\n\"gender\": \"n/a\"\n}\n{\n\"name\": \"R2-D2\",\n\"height\": \"96\",\n\"mass\": \"32\",\n\"hair_color\": \"n/a\",\n\"skin_color\": \"white, blue\",\n\"eye_color\": \"red\",\n\"birth_year\": \"33BBY\",\n\"gender\": \"n/a\"\n}\n```", "```go\nError unmarshalling json data: invalid character '{' after top-level value\n```", "```go\nfunc decode(p chan Person) {\n\tfile, err := os.Open(\"people_stream.json\")\n\tif err != nil {\n\t\tlog.Println(\"Error opening json file:\", err)\n\t}\n\tdefer file.Close()\n\n\tdecoder := json.NewDecoder(file)\n\tfor {\n\t\tvar person Person\n\t\terr = decoder.Decode(&person)\n\t\tif err == io.EOF {\n\t\t\tbreak\n\t\t}\n\t\tif err != nil {\n\t\t\tlog.Println(\"Error decoding json data:\", err)\n\t\t\tbreak\n\t\t}\n\t\tp <- person\n\t}\n\tclose(p)\n}\n```", "```go\nfunc main() {\n\tp := make(chan Person)\n\tgo decode(p)\n\tfor {\n\t\tperson, ok := <-p\n\t\tif ok {\n            fmt.Printf(\"%# v\\n\", pretty.Formatter(person))\n\t\t} else {\n\t\t\tbreak\n\t\t}\n\t}\n}\n```", "```go\njson.Person{\n    Name:      \"Luke Skywalker\",\n    Height:    \"172\",\n    Mass:      \"77\",\n    HairColor: \"blond\",\n    SkinColor: \"fair\",\n    EyeColor:  \"blue\",\n    BirthYear: \"19BBY\",\n    Gender:    \"male\",\n    Homeworld: \"\",\n    Films:     nil,\n    Species:   nil,\n    Vehicles:  nil,\n    Starships: nil,\n    Created:   time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC),\n    Edited:    time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC),\n    URL:       \"\",\n}\njson.Person{\n    Name:      \"C-3PO\",\n    Height:    \"167\",\n    Mass:      \"75\",\n    HairColor: \"n/a\",\n    SkinColor: \"gold\",\n    EyeColor:  \"yellow\",\n    BirthYear: \"112BBY\",\n    Gender:    \"n/a\",\n    Homeworld: \"\",\n    Films:     nil,\n    Species:   nil,\n    Vehicles:  nil,\n    Starships: nil,\n    Created:   time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC),\n    Edited:    time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC),\n    URL:       \"\",\n}\njson.Person{\n    Name:      \"R2-D2\",\n    Height:    \"96\",\n    Mass:      \"32\",\n    HairColor: \"n/a\",\n    SkinColor: \"white, blue\",\n    EyeColor:  \"red\",\n    BirthYear: \"33BBY\",\n    Gender:    \"n/a\",\n    Homeworld: \"\",\n    Films:     nil,\n    Species:   nil,\n    Vehicles:  nil,\n    Starships: nil,\n    Created:   time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC),\n    Edited:    time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC),\n    URL:       \"\",\n}\n```", "```go\nvar luke []byte = []byte(\n\t`{\n \"name\": \"Luke Skywalker\",\n \"height\": \"172\",\n \"mass\": \"77\",\n \"hair_color\": \"blond\",\n \"skin_color\": \"fair\",\n \"eye_color\": \"blue\",\n \"birth_year\": \"19BBY\",\n \"gender\": \"male\"\n}`)\n\nfunc BenchmarkUnmarshal(b *testing.B) {\n\tvar person Person\n\tb.ResetTimer()\n\tfor i := 0; i < b.N; i++ {\n\t\tjson.Unmarshal(luke, &person)\n\t}\n}\n\nfunc BenchmarkDecode(b *testing.B) {\n\tvar person Person\n\tdata := bytes.NewReader(luke)\n\tdecoder := json.NewDecoder(data)\n\tb.ResetTimer()\n\tfor i := 0; i < b.N; i++ {\n\t\tdecoder.Decode(&person)\n\t\tdata.Seek(0, 0)\n\t}\n}\n```", "```go\n$ go test -bench=. -benchmem\n```", "```go\ngoos: darwin\ngoarch: amd64\npkg: github.com/sausheong/gocookbook/ch10_json\ncpu: Intel(R) Core(TM) i7-7920HQ CPU @ 3.10GHz\nBenchmarkUnmarshal-8   \t  437274\t  2494 ns/op     272 B/op    12 allocs/op\nBenchmarkDecode-8      \t  486051\t  2368 ns/op      48 B/op     8 allocs/op\nPASS\nok  \tgithub.com/sausheong/gocookbook/ch10_json\t6.242s\n```", "```go\nfunc main() {\n\tperson := get(\"https://swapi.dev/api/people/14\")\n\n\tdata, err := json.Marshal(&person)\n\tif err != nil {\n\t\tlog.Println(\"Cannot marshal person:\", err)\n\t}\n\terr = os.WriteFile(\"han.json\", data, 0644)\n\tif err != nil {\n\t\tlog.Println(\"Cannot write to file\", err)\n\t}\n}\n\nfunc get(url string) Person {\n\tr, err := http.Get(url)\n\tif err != nil {\n\t\tlog.Println(\"Cannot get from URL\", err)\n\t}\n\tdefer r.Body.Close()\n\n\tdata, err := os.ReadAll(r.Body)\n\tif err != nil {\n\t\tlog.Println(\"Error reading json data:\", err)\n\t}\n\n\tvar person Person\n\tjson.Unmarshal(data, &person)\n\treturn person\n}\n```", "```go\n{\"name\":\"Han Solo\",\"height\":\"180\",\"mass\":\"80\",\"hair_color\":\"brown\",\n\"skin_color\":\"fair\",\"eye_color\":\"brown\",\"birth_year\":\"29BBY\",\"gender\":\"male\",\n\"homeworld\":\"https://swapi.dev/api/planets/22/\",\"films\":\n[\"https://swapi.dev/api/films/1/\",\"https://swapi.dev/api/films/2/\",\n\"https://swapi.dev/api/films/3/\"],\"species\":[],\"vehicles\":[],\"starships\":\n[\"https://swapi.dev/api/starships/10/\",\"https://swapi.dev/api/starships/22/\"],\n\"created\":\"2014-12-10T16:49:14.582Z\",\"edited\":\"2014-12-20T21:17:50.334Z\",\n\"url\":\"https://swapi.dev/api/people/14/\"}\n```", "```go\ndata, err := json.MarshalIndent(&person, \"\", \" \")\n```", "```go\n{\n \"name\": \"Han Solo\",\n \"height\": \"180\",\n \"mass\": \"80\",\n \"hair_color\": \"brown\",\n \"skin_color\": \"fair\",\n \"eye_color\": \"brown\",\n \"birth_year\": \"29BBY\",\n \"gender\": \"male\",\n \"homeworld\": \"https://swapi.dev/api/planets/22/\",\n \"films\": [\n  \"https://swapi.dev/api/films/1/\",\n  \"https://swapi.dev/api/films/2/\",\n  \"https://swapi.dev/api/films/3/\"\n ],\n \"species\": [],\n \"vehicles\": [],\n \"starships\": [\n  \"https://swapi.dev/api/starships/10/\",\n  \"https://swapi.dev/api/starships/22/\"\n ],\n \"created\": \"2014-12-10T16:49:14.582Z\",\n \"edited\": \"2014-12-20T21:17:50.334Z\",\n \"url\": \"https://swapi.dev/api/people/14/\"\n}\n```", "```go\nfunc get(url string) (person Person) {\n\tr, err := http.Get(r, err := http.Get(\"https://swapi.dev/api/people/\" +\n      strconv.Itoa(n)))\n\tif err != nil {\n\t\tlog.Println(\"Cannot get from URL\", err)\n\t}\n\tdefer r.Body.Close()\n\n\tdata, err := os.ReadAll(r.Body)\n\tif err != nil {\n\t\tlog.Println(\"Error reading json data:\", err)\n\t}\n\n\tjson.Unmarshal(data, &person)\n\treturn\n}\n```", "```go\nfunc main() {\n\tencoder := json.NewEncoder(os.Stdout)\n\tfor i := 1; i < 4; i++ { // we're just retrieving 3 records\n\t\tperson := get(i)\n\t\tencoder.Encode(person)\n\t}\n}\n```", "```go\n{\"name\":\"Luke Skywalker\",\"height\":\"172\",\"mass\":\"77\",\"hair_color\":\"blond\",\n\"skin_color\":\"fair\",\"eye_color\":\"blue\",\"birth_year\":\"19BBY\",\"gender\":\"male\",\n\"homeworld\":\"https://swapi.dev/api/planets/1/\",\"films\":\n[\"https://swapi.dev/api/films/1/\",\"https://swapi.dev/api/films/2/\",\n\"https://swapi.dev/api/films/3/\",\"https://swapi.dev/api/films/6/\"],\n\"species\":[],\"vehicles\":[\"https://swapi.dev/api/vehicles/14/\",\n\"https://swapi.dev/api/vehicles/30/\"],\"starships\":\n[\"https://swapi.dev/api/starships/12/\",\"https://swapi.dev/api/starships/22/\"],\n\"created\":\"2014-12-09T13:50:51.644Z\",\"edited\":\"2014-12-20T21:17:56.891Z\",\n\"url\":\"https://swapi.dev/api/people/1/\"}\n{\"name\":\"C-3PO\",\"height\":\"167\",\"mass\":\"75\",\"hair_color\":\"n/a\",\"skin_color\":\n\"gold\",\"eye_color\":\"yellow\",\"birth_year\":\"112BBY\",\"gender\":\"n/a\",\"homeworld\":\n\"https://swapi.dev/api/planets/1/\",\"films\":[\"https://swapi.dev/api/films/1/\",\n\"https://swapi.dev/api/films/2/\",\"https://swapi.dev/api/films/3/\",\n\"https://swapi.dev/api/films/4/\",\"https://swapi.dev/api/films/5/\",\n\"https://swapi.dev/api/films/6/\"],\"species\":[\"https://swapi.dev/api/species/2/\"],\n\"vehicles\":[],\"starships\":[],\"created\":\"2014-12-10T15:10:51.357Z\",\"edited\":\n\"2014-12-20T21:17:50.309Z\",\"url\":\"https://swapi.dev/api/people/2/\"}\n{\"name\":\"R2-D2\",\"height\":\"96\",\"mass\":\"32\",\"hair_color\":\"n/a\",\"skin_color\":\n\"white, blue\",\"eye_color\":\"red\",\"birth_year\":\"33BBY\",\"gender\":\"n/a\",\n\"homeworld\":\"https://swapi.dev/api/planets/8/\",\"films\":\n[\"https://swapi.dev/api/films/1/\",\"https://swapi.dev/api/films/2/\",\n\"https://swapi.dev/api/films/3/\",\"https://swapi.dev/api/films/4/\",\n\"https://swapi.dev/api/films/5/\",\"https://swapi.dev/api/films/6/\"],\n\"species\":[\"https://swapi.dev/api/species/2/\"],\"vehicles\":[],\"starships\":[],\n\"created\":\"2014-12-10T15:11:50.376Z\",\"edited\":\"2014-12-20T21:17:50.311Z\",\n\"url\":\"https://swapi.dev/api/people/3/\"}\n```", "```go\nencoder.SetIndent(\"\", \" \")\n```", "```go\nvar jsonBytes []byte = []byte(jsonString)\nvar person Person\n\nfunc BenchmarkMarshal(b *testing.B) {\n    json.Unmarshal(jsonBytes, &person)\n    b.ResetTimer()\n\tfor i := 0; i < b.N; i++ {\n\t\tdata, _ := json.Marshal(person)\n\t\tio.Discard.Write(data)\n\t}\n}\n\nfunc BenchmarkEncoder(b *testing.B) {\n\tjson.Unmarshal(jsonBytes, &person)\n\tb.ResetTimer()\n    encoder := json.NewEncoder(io.Discard)\n\tfor i := 0; i < b.N; i++ {\n\t\tencoder.Encode(person)\n\t}\n}\n```", "```go\ngoos: darwin\ngoarch: amd64\npkg: github.com/sausheong/go-recipes/io/json\ncpu: Intel(R) Core(TM) i7-7920HQ CPU @ 3.10GHz\nBenchmarkMarshal-8   \t 1983175     614.6 ns/op     288 B/op     2 allocs/op\nBenchmarkEncoder-8   \t 2284209     500.3 ns/op     128 B/op     1 allocs/op\nPASS\nok  \tgithub.com/sausheong/go-recipes/io/json\t3.852s\n```", "```go\ntype Person struct {\n\tName      string        `json:\"name\"`\n\tHeight    string        `json:\"height\"`\n\tMass      string        `json:\"mass\"`\n\tHairColor string        `json:\"hair_color\"`\n\tSkinColor string        `json:\"skin_color\"`\n\tEyeColor  string        `json:\"eye_color\"`\n\tBirthYear string        `json:\"birth_year\"`\n\tGender    string        `json:\"gender\"`\n\tHomeworld string        `json:\"homeworld\"`\n\tFilms     []string      `json:\"films\"`\n\tSpecies   []string      `json:\"species\"`\n\tVehicles  []string      `json:\"vehicles\"`\n\tStarships []string      `json:\"starships\"`\n\tCreated   time.Time     `json:\"created\"`\n\tEdited    time.Time     `json:\"edited\"`\n\tURL       string        `json:\"url\"`\n}\n```", "```go\n{\n \"name\": \"Owen Lars\",\n \"height\": \"178\",\n \"mass\": \"120\",\n \"hair_color\": \"brown, grey\",\n \"skin_color\": \"light\",\n \"eye_color\": \"blue\",\n \"birth_year\": \"52BBY\",\n \"gender\": \"male\",\n \"homeworld\": \"https://swapi.dev/api/planets/1/\",\n \"films\": [\n  \"https://swapi.dev/api/films/1/\",\n  \"https://swapi.dev/api/films/5/\",\n  \"https://swapi.dev/api/films/6/\"\n ],\n \"species\": [],\n \"vehicles\": [],\n \"starships\": [],\n \"created\": \"2014-12-10T15:52:14.024Z\",\n \"edited\": \"2014-12-20T21:17:50.317Z\",\n \"url\": \"https://swapi.dev/api/people/6/\"\n}\n```", "```go\nSpecies   []string      `json:\"species,omitempty\"`\nVehicles  []string      `json:\"vehicles,omitempty\"`\nStarships []string      `json:\"starships,omitempty\"`\n```", "```go\n{\n \"name\": \"Owen Lars\",\n \"height\": \"178\",\n \"mass\": \"120\",\n \"hair_color\": \"brown, grey\",\n \"skin_color\": \"light\",\n \"eye_color\": \"blue\",\n \"birth_year\": \"52BBY\",\n \"gender\": \"male\",\n \"homeworld\": \"https://swapi.dev/api/planets/1/\",\n \"films\": [\n  \"https://swapi.dev/api/films/1/\",\n  \"https://swapi.dev/api/films/5/\",\n  \"https://swapi.dev/api/films/6/\"\n ],\n \"created\": \"2014-12-10T15:52:14.024Z\",\n \"edited\": \"2014-12-20T21:17:50.317Z\",\n \"url\": \"https://swapi.dev/api/people/6/\"\n}\n```"]