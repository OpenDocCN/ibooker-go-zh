["```go\n$ tar -C /usr/local -xzf go1.20.5.linux-amd64.tar.gz\n$ echo 'export PATH=$PATH:/usr/local/go/bin' >> $HOME/.bash_profile\n$ source $HOME/.bash_profile\n\n```", "```go\n$ go version\n```", "```go\ngo version go1.20.5 darwin/arm64\n```", "```go\ngo version go1.20.5 linux/amd64\n```", "```go\n$ mkdir ch1\n$ cd ch1\n```", "```go\n$ go mod init hello_world\ngo: creating new go.mod: module hello_world\n```", "```go\nmodule hello_world\n\ngo 1.20\n```", "```go\npackage main\n\nimport \"fmt\"\n\nfunc main() {\nfmt.Println(\"Hello, world!\")\n}\n```", "```go\n$ go build\n```", "```go\n$ ./hello_world\nHello, world!\n```", "```go\n$ go build -o hello\n```", "```go\n$ go fmt ./...\nhello.go\n```", "```go\nfmt.Printf(\"Hello, %s!\\n\")\n```", "```go\n$ go vet ./...\n# hello_world\n./hello.go:6:2: fmt.Printf format %s reads arg #1, but call has 0 args\n\n```", "```go\nfmt.Printf(\"Hello, %s!\\n\", \"world\")\n```", "```go\n.DEFAULT_GOAL := build\n\n.PHONY:fmt vet build\nfmt:\n        go fmt ./...\n\nvet: fmt\n        go vet ./...\n\nbuild: vet\n        go build\n```", "```go\n$ make\ngo fmt ./...\ngo vet ./...\ngo build\n\n```", "```go\n$ mv /usr/local/go /usr/local/old-go\n$ tar -C /usr/local -xzf go1.20.6.linux-amd64.tar.gz\n$ rm -rf /usr/local/old-go\n\n```"]