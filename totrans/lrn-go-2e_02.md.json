["```go\n`Greetings and\n\"Salutations\"`\n```", "```go\nvar flag bool // no value assigned, set to false\nvar isAwesome = true\n```", "```go\nvar x int = 10\nx *= 2\n```", "```go\nvar complexNum = complex(20.3, 10.2)\n```", "```go\nfunc main() {\n    x := complex(2.5, 3.1)\n    y := complex(10.2, 2)\n    fmt.Println(x + y)\n    fmt.Println(x - y)\n    fmt.Println(x * y)\n    fmt.Println(x / y)\n    fmt.Println(real(x))\n    fmt.Println(imag(x))\n    fmt.Println(cmplx.Abs(x))\n}\n```", "```go\n(12.7+5.1i)\n(-7.699999999999999+1.1i)\n(19.3+36.62i)\n(0.2934098482043688+0.24639022584228065i)\n2.5\n3.1\n3.982461550347975\n```", "```go\nvar myFirstInitial rune = 'J' // good - the type name matches the usage\nvar myLastInitial int32 = 'B' // bad - legal but confusing\n```", "```go\nvar x int = 10\nvar y float64 = 30.2\nvar sum1 float64 = float64(x) + y\nvar sum2 int = x + int(y)\nfmt.Println(sum1, sum2)\n```", "```go\nvar x int = 10\nvar b byte = 100\nvar sum3 int = x + int(b)\nvar sum4 byte = byte(x) + b\nfmt.Println(sum3, sum4)\n```", "```go\nvar x float64 = 10\nvar y float64 = 200.3 * 5\n```", "```go\nvar x int = 10\n```", "```go\nvar x = 10\n```", "```go\nvar x int\n```", "```go\nvar x, y int = 10, 20\n```", "```go\nvar x, y int\n```", "```go\nvar x, y = 10, \"hello\"\n```", "```go\nvar (\n    x    int\n    y        = 20\n    z    int = 30\n    d, e     = 40, \"hello\"\n    f, g string\n)\n```", "```go\nvar x = 10\nx := 10\n```", "```go\nvar x, y = 10, \"hello\"\nx, y := 10, \"hello\"\n```", "```go\nx := 10\nx, y := 30, \"hello\"\n```", "```go\npackage main\n\nimport \"fmt\"\n\nconst x int64 = 10\n\nconst (\n    idKey   = \"id\"\n    nameKey = \"name\"\n)\n\nconst z = 20 * 10\n\nfunc main() {\n    const y = \"hello\"\n\n    fmt.Println(x)\n    fmt.Println(y)\n\n    x = x + 1 // this will not compile!\n    y = \"bye\" // this will not compile!\n    fmt.Println(x)\n    fmt.Println(y)\n}\n```", "```go\n./prog.go:20:2: cannot assign to x (constant 10 of type int64)\n./prog.go:21:2: cannot assign to y (untyped string constant \"hello\")\n```", "```go\nx := 5\ny := 10\nconst z = x + y // this won't compile!\n```", "```go\nconst x = 10\n```", "```go\nvar y int = x\nvar z float64 = x\nvar d byte = x\n```", "```go\nconst typedX int = 10\n```", "```go\ncannot use typedX (type int) as type float64 in assignment\n```", "```go\nfunc main() {\n    x := 10 // this assignment isn't read!\n    x = 20\n    fmt.Println(x)\n    x = 30 // this assignment isn't read!\n}\n```", "```go\n_0 := 0_0\n_ùüô := 20\nœÄ := 3\nÔΩÅ := \"hello\" // Unicode U+FF41\n__ := \"double underscore\" // two underscores\nfmt.Println(_0)\nfmt.Println(_ùüô)\nfmt.Println(œÄ)\nfmt.Println(ÔΩÅ)\nfmt.Println(__)\n\n```", "```go\nfunc main() {\n    ÔΩÅ := \"hello\"   // Unicode U+FF41\n    a := \"goodbye\" // standard lowercase a (Unicode U+0061)\n    fmt.Println(ÔΩÅ)\n    fmt.Println(a)\n}\n\n```", "```go\nhello\ngoodbye\n```"]