["```go\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n    fmt.Println(\"Hello, world!\")\n}\n```", "```go\ngo run hello.go\nHello, world!\n\n```", "```go\n$ go install github.com/rakyll/hey@latest\ngo: downloading github.com/rakyll/hey v0.1.4\ngo: downloading golang.org/x/net v0.0.0-20181017193950-04a2e542c03f\ngo: downloading golang.org/x/text v0.3.0\n\n```", "```go\n$ hey https://go.dev\n\nSummary:\n  Total:           2.1272 secs\n  Slowest:         1.4227 secs\n  Fastest:         0.0573 secs\n  Average:         0.3467 secs\n  Requests/sec:    94.0181\n\n```", "```go\n$ go install github.com/rakyll/hey@latest\n\n```", "```go\n$ goimports -l -w .\n\n```", "```go\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n    s := fmt.Sprintf(\"Hello\")\n    fmt.Println(s)\n}\n```", "```go\n$ staticcheck ./...\nmain.go:6:7: unnecessary use of fmt.Sprintf (S1039)\n\n```", "```go\n$ staticcheck -explain S1039\nUnnecessary use of fmt.Sprint\n\nCalling fmt.Sprint with a single string argument is unnecessary\nand identical to using the string directly.\n\nAvailable since\n    2020.1\n\nOnline documentation\n    https://staticcheck.io/docs/checks#S1039\n\n```", "```go\nfunc main() {\n        err := returnErr(false)\n        if err != nil {\n                fmt.Println(err)\n        }\n        err = returnErr(true)\n        fmt.Println(\"end of program\")\n}\n```", "```go\n$ staticcheck ./...\nmain.go:13:2: this value of err is never used (SA4006)\nmain.go:13:8: returnErr doesn't have side effects and its return value is\nignored (SA4017)\n\n```", "```go\n[rule.redefines-builtin-id]\n```", "```go\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n    true := false\n    fmt.Println(true)\n}\n```", "```go\n$ revive -config built_in.toml ./...\nmain.go:6:2: assignment creates a shadow of built-in identifier true\n\n```", "```go\n$ golangci-lint run\n\n```", "```go\n$ golangci-lint run\nmain.go:6:2: ineffectual assignment to x (ineffassign)\n    x := 10\n    ^\nmain.go:9:2: ineffectual assignment to x (ineffassign)\n    x = 30\n    ^\n\n```", "```go\nlinters:\n  enable:\n    - govet\n    - predeclared\n\nlinters-settings:\n  govet:\n    check-shadowing: true\n    settings:\n      shadow:\n        strict: true\n    enable-all: true\n```", "```go\npackage main\n\nimport \"fmt\"\n\nvar b = 20\n\nfunc main() {\n    true := false\n    a := 10\n    b := 30\n    if true {\n        a := 20\n        fmt.Println(a)\n    }\n    fmt.Println(a, b)\n}\n```", "```go\n$ golangci-lint run\nmain.go:5:5: var `b` is unused (unused)\nvar b = 20\n    ^\nmain.go:10:2: shadow: declaration of \"b\" shadows declaration at line 5 (govet)\n    b := 30\n    ^\nmain.go:12:3: shadow: declaration of \"a\" shadows declaration at line 9 (govet)\n        a := 20\n        ^\nmain.go:8:2: variable true has same name as predeclared identifier (predeclared)\n    true := false\n    ^\n\n```", "```go\n$ go install golang.org/x/vuln/cmd/govulncheck@latest\n\n```", "```go\nfunc main() {\n    info := Info{}\n\n    err := yaml.Unmarshal([]byte(data), &info)\n    if err != nil {\n        fmt.Printf(\"error: %v\\n\", err)\n        os.Exit(1)\n    }\n    fmt.Printf(\"%+v\\n\", info)\n}\n```", "```go\nmodule github.com/learning-go-book-2e/vulnerable\n\ngo 1.20\n\nrequire gopkg.in/yaml.v2 v2.2.7\n\nrequire gopkg.in/check.v1 v1.0.0-20201130134442-10cb98267c6c // indirect\n```", "```go\n$ govulncheck ./...\nUsing go1.21 and govulncheck@v1.0.0 with vulnerability data from\n    https://vuln.go.dev (last modified 2023-07-27 20:09:46 +0000 UTC).\n\nScanning your code and 49 packages across 1 dependent module\n    for known vulnerabilities...\n\nVulnerability #1: GO-2020-0036\n    Excessive resource consumption in YAML parsing in gopkg.in/yaml.v2\n  More info: https://pkg.go.dev/vuln/GO-2020-0036\n  Module: gopkg.in/yaml.v2\n    Found in: gopkg.in/yaml.v2@v2.2.7\n    Fixed in: gopkg.in/yaml.v2@v2.2.8\n    Example traces found:\n      #1: main.go:25:23: vulnerable.main calls yaml.Unmarshal\n\nYour code is affected by 1 vulnerability from 1 module.\n\n```", "```go\n$ go get -u=patch gopkg.in/yaml.v2\ngo: downloading gopkg.in/yaml.v2 v2.2.8\ngo: upgraded gopkg.in/yaml.v2 v2.2.7 => v2.2.8\n$ govulncheck ./...\nUsing go1.21and govulncheck@v1.0.0 with vulnerability data from\n    https://vuln.go.dev (last modified 2023-07-27 20:09:46 +0000 UTC).\n\nScanning your code and 49 packages across 1 dependent module\n    for known vulnerabilities...\n\nNo vulnerabilities found.\n\n```", "```go\npackage main\n\nimport (\n    _ \"embed\"\n    \"fmt\"\n    \"os\"\n    \"strings\"\n)\n\n//go:embed passwords.txt\nvar passwords string\n\nfunc main() {\n    pwds := strings.Split(passwords, \"\\n\")\n    if len(os.Args) > 1 {\n        for _, v := range pwds {\n            if v == os.Args[1] {\n                fmt.Println(\"true\")\n                os.Exit(0)\n            }\n        }\n        fmt.Println(\"false\")\n    }\n}\n```", "```go\npackage main\n\nimport (\n    \"embed\"\n    \"fmt\"\n    \"io/fs\"\n    \"os\"\n    \"strings\"\n)\n\n//go:embed help\nvar helpInfo embed.FS\n\nfunc main() {\n    if len(os.Args) == 1 {\n        printHelpFiles()\n        os.Exit(0)\n    }\n    data, err := helpInfo.ReadFile(\"help/\" + os.Args[1])\n    if err != nil {\n        fmt.Println(err)\n        os.Exit(1)\n    }\n    fmt.Println(string(data))\n}\n```", "```go\n$ go build\n$ ./help_system\ncontents:\nadvanced/topic1.txt\nadvanced/topic2.txt\ninfo.txt\n\n$ ./help_system advanced/topic1.txt\nThis is advanced topic 1.\n\n$ ./help_system advanced/topic3.txt\nopen help/advanced/topic3.txt: file does not exist\n\n```", "```go\nfunc printHelpFiles() {\n    fmt.Println(\"contents:\")\n    fs.WalkDir(helpInfo, \"help\",\n        func(path string, d fs.DirEntry, err error) error {\n            if !d.IsDir() {\n                _, fileName, _ := strings.Cut(path, \"/\")\n                fmt.Println(fileName)\n            }\n            return nil\n        })\n}\n```", "```go\n//go:embed parent_dir\nvar noHidden embed.FS\n\n//go:embed parent_dir/*\nvar parentHiddenOnly embed.FS\n\n//go:embed all:parent_dir\nvar allHidden embed.FS\n\nfunc main() {\n    checkForHidden(\"noHidden\", noHidden)\n    checkForHidden(\"parentHiddenOnly\", parentHiddenOnly)\n    checkForHidden(\"allHidden\", allHidden)\n}\n\nfunc checkForHidden(name string, dir embed.FS) {\n    fmt.Println(name)\n    allFileNames := []string{\n        \"parent_dir/.hidden\",\n        \"parent_dir/child_dir/.hidden\",\n    }\n    for _, v := range allFileNames {\n        _, err := dir.Open(v)\n        if err == nil {\n            fmt.Println(v, \"found\")\n        }\n    }\n    fmt.Println()\n}\n```", "```go\nnoHidden\n\nparentHiddenOnly\nparent_dir/.hidden found\n\nallHidden\nparent_dir/.hidden found\nparent_dir/child_dir/.hidden found\n```", "```go\nsyntax = \"proto3\";\n\nmessage Person {\n  string name = 1;\n  int32 id = 2;\n  string email = 3;\n}\n```", "```go\n$ go install google.golang.org/protobuf/cmd/protoc-gen-go@v1.28\n\n```", "```go\n//go:generate protoc -I=. --go_out=.\n  --go_opt=module=github.com/learning-go-book-2e/proto_generate\n  --go_opt=Mperson.proto=github.com/learning-go-book-2e/proto_generate/data\n  person.proto\n```", "```go\n$ go generate ./...\n\n```", "```go\nfunc main() {\n    p := &data.Person{\n        Name:  \"Bob Bobson\",\n        Id:    20,\n        Email: \"bob@bobson.com\",\n    }\n    fmt.Println(p)\n    protoBytes, _ := proto.Marshal(p)\n    fmt.Println(protoBytes)\n    var p2 data.Person\n    proto.Unmarshal(protoBytes, &p2)\n    fmt.Println(&p2)\n}\n```", "```go\n$ go build\n$ ./proto_generate\nname:\"Bob Bobson\"  id:20  email:\"bob@bobson.com\"\n[10 10 66 111 98 32 66 111 98 115 111 110 16 20 26 14 98\n  111 98 64 98 111 98 115 111 110 46 99 111 109]\nname:\"Bob Bobson\"  id:20  email:\"bob@bobson.com\"\n```", "```go\ntype Direction int\n\nconst (\n    _ Direction = iota\n    North\n    South\n    East\n    West\n)\n\n//go:generate stringer -type=Direction\n\nfunc main() {\n    fmt.Println(North.String())\n}\n```", "```go\nNorth\n```", "```go\n$ go build\ngo: downloading gopkg.in/yaml.v2 v2.2.7\n$ go version -m vulnerable\nvulnerable: go1.20\n    path     github.com/learning-go-book-2e/vulnerable\n    mod      github.com/learning-go-book-2e/vulnerable    (devel)\n    dep      gopkg.in/yaml.v2  v2.2.7  h1:VUgggvou5XRW9mHwD/yXxIYSMtY0zoKQf/v...\n    build    -compiler=gc\n    build    CGO_ENABLED=1\n    build    CGO_CFLAGS=\n    build    CGO_CPPFLAGS=\n    build    CGO_CXXFLAGS=\n    build    CGO_LDFLAGS=\n    build    GOARCH=arm64\n    build    GOOS=darwin\n    build    vcs=git\n    build    vcs.revision=623a65b94fd02ea6f18df53afaaea3510cd1e611\n    build    vcs.time=2022-10-02T03:31:05Z\n    build    vcs.modified=false\n\n```", "```go\n$ govulncheck -mode binary vulnerable\nUsing govulncheck@v1.0.0 with vulnerability data from\n    https://vuln.go.dev (last modified 2023-07-27 20:09:46 +0000 UTC).\n\nScanning your binary for known vulnerabilities...\n\nVulnerability #1: GO-2020-0036\n    Excessive resource consumption in YAML parsing in gopkg.in/yaml.v2\n  More info: https://pkg.go.dev/vuln/GO-2020-0036\n  Module: gopkg.in/yaml.v2\n    Found in: gopkg.in/yaml.v2@v2.2.7\n    Fixed in: gopkg.in/yaml.v2@v2.2.8\n    Example traces found:\n      #1: yaml.Unmarshal\n\nYour code is affected by 1 vulnerability from 1 module.\n\n```", "```go\n$ go build\n$ file vulnerable\nvulnerable: Mach-O 64-bit executable arm64\n\n```", "```go\n$ GOOS=linux GOARCH=amd64 go build\n$ file vulnerable\nvulnerable: ELF 64-bit LSB executable, x86-64, version 1 (SYSV),\n    statically linked, Go BuildID=IDHVCE8XQPpWluGpMXpX/4VU3GpRZEifN\n    8TzUrT_6/1c30VcDYNVPfSSN-zCkz/JsZSLAbWkxqIVhPkC5p5, with debug_info,\n    not stripped\n\n```", "```go\n$ go install golang.org/dl/go1.19.2@latest\n$ go1.19.2 download\n\n```", "```go\n$ go1.19.2 build\n\n```", "```go\n$ rm -rf ~/sdk/go.19.2\n$ rm ~/go/bin/go1.19.2\n\n```"]